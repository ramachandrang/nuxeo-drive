{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;\f1\fnil\fcharset0 Consolas;\f2\fnil\fcharset0 Calibri;
\f3\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red255\green0\blue0;}
{\info
{\author Michael Constantin}
{\*\company Microsoft}}\margl1440\margr1440\vieww13900\viewh16140\viewkind1
\deftab720
\pard\pardeftab720\ri0

\f0\fs22 \cf0 ======================================================\
Nuxeo Drive - Desktop synchronization client for Nuxeo\
======================================================\
\
This is an ongoing development project for desktop synchronization\
of local folders with remote Nuxeo workspaces.\
\
Watch this `early screencast`_ to get 2 min overview of this project.\
\
WARNING: The status is EARLY ALPHA. Don't run on a production server\
as you might loose data!\
\
.. _`early screencast`: http://lounge.blogs.nuxeo.com/2012/07/nuxeo-drive-desktop-synchronization-client-nuxeo.html\
\
\
Install\
=======\
\
Installing Nuxeo Drive needs two components: a server addon for Nuxeo and a\
desktop program on the user's computer.\
\
\
Server-side marketplace package\
-------------------------------\
\
Fetch the latest development version of the marketplace package\
`nuxeo-drive-marketplace-5.7-SNAPSHOT.zip <http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/lastSuccessfulBuild/artifact/packaging/nuxeo-drive-marketplace/target/nuxeo-drive-marketplace-5.7-SNAPSHOT.zip>`_\
from the Continuous Integration server.\
\
The marketplace package can be installed using the Admin Center /\
Update Center / Local Packages interface of a Nuxeo server.\
\
Alternatively, from the command line::\
\
  $NUXEO_HOME/bin/nuxeoctl stop\
  $NUXEO_HOME/bin/nuxeoctl mp-install --nodeps nuxeo-drive-marketplace-<version>.zip\
  $NUXEO_HOME/bin/nuxeoctl start\
\
\
Windows Desktop Client\
----------------------\
\
Fetch the latest development version for\
`nuxeo-drive-latest-dev.msi <http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/lastSuccessfulBuild/artifact/dist/nuxeo-drive-lastest-dev.msi>`_\
windows installer from the Continous Integration.\
\
Once you installed the package (Administrator rights required) the new folder\
holding the ``ndrive.exe`` and ``ndrivew.exe`` programs will be added to your\
``Path`` environment variable automatically.\
\
All the necessary dependencies (such as the Python interpreter and the QT /\
PySide for the client side user interface) are included in this folder and\
should not impact any alternative version possibly already installed on your\
computer.\
\
\
Mac OSX Desktop Client\
----------------------\
\
The ``.dmg`` package of the client is not yet available. In the mean time you\
can install it from source::\
\
  sudo easy_install pip\
  sudo pip install -U -r https://raw.github.com/nuxeo/nuxeo-drive/master/requirements.txt\
  sudo pip install -U git+https://github.com/nuxeo/nuxeo-drive.git\
\
The install QT and PySide for graphical user interface (see below).\
\
Ubuntu/Debian (and other Linux variants) Client\
-----------------------------------------------\
\
The ``.deb`` package of the client is not yet available. In the mean time you\
can install it from source::\
\
  sudo apt-get install python-pip\
  sudo pip install -U -r https://raw.github.com/nuxeo/nuxeo-drive/master/requirements.txt\
  sudo pip install -U git+https://github.com/nuxeo/nuxeo-drive.git\
\
The install QT and PySide for graphical user interface (see below).\
\
\
Configuration and usage\
=======================\
\
Once Nuxeo Drive is installed on the client desktop (either from a\
ready to use ``.msi`` Windows binary installer or by installing\
from source with pip_), the synchronization client can be operated\
from the commandline.\
\
1. Ensure that ``ndrive`` program is installed in a folder that has been\
   added to the PATH enviroment variable of your OS.\
\
   You can check by typing the ``ndrive --help`` command in a console.\
\
2. Launch the synchronization program (no automatic background mode\
   yet, this will come in future versions)::\
\
     ndrive\
\
   Under Windows you can launch ``ndrivew.exe`` instead to avoid\
   keeping the cmd console open while Nuxeo Drive is running instead.\
\
   The first time you run this command a dialog window will open asking for the\
   URL of the Nuxeo server and your user credentials.\
\
   Alternatively you can bind to a Nuxeo server with your user credentials\
   using the following commandline arguments::\
\
     ndrive bind-server nuxeo-username http://server:port/nuxeo --password secret\
\
   This will create a new folder called ``Nuxeo Drive`` in your home\
   folder under Linux and MacOSX and under the ``Documents`` folder\
   under Windows.\
\
3. Go to your Nuxeo with your browser, navigate to workspaces or\
   folder where you have permission to create new documents. Click\
   on the double arrows button right of the title of the folder to\
   treat this folder as a new synchronization root.\
\
   Alternatively you can do this operation from the commandline with::\
\
     ndrive bind-root "/default-domain/workspaces/My Workspace"\
\
4. You can now create office documents and folders locally or inside\
   Nuxeo and watch them getting synchronized both ways automatically.\
\
For more options, type::\
\
    ndrive --help\
    ndrive subcommand --help\
\
\
Reporting bugs\
==============\
\
You can log DEBUG information directly in the console by using the\
following commandline::\
\
    ndrive --log-level-console=DEBUG\
\
Then you can create a new jira_ issue mentionning the version of the Nuxeo\
platform, your operating system name and version (e.g. Windows 7), the steps to\
reproduce the error and a copy of the logs.\
\
For long running sessions, it is better to dump the debug information in a log\
file. This can be done with the following command::\
\
    ndrive --log-level-file=DEBUG\
\
or even::\
\
    ndrive --log-level-file=TRACE\
\
By default the location of the log file is: ``~/.nuxeo-drive/logs/``\
where ``~`` stands for the location of the user folder. For instance:\
\
- under Windows 7 and 8: ``C:\\Users\\username\\.nuxeo-drive\\logs``\
- under Mac OSX: ``/Users/username/.nuxeo-drive/logs``\
- under Ubuntu (and other Linux variants): ``/home/username/.nuxeo-drive/logs``\
\
.. _jira: https://jira.nuxeo.com\
\
\
Roadmap\
=======\
\
The backlog_ is handled by Jira.\
\
.. _backlog: https://jira.nuxeo.com/secure/IssueNavigator.jspa?reset=true&jqlQuery=component+%3D+%22Nuxeo+Drive%22+AND+Tags+%3D+%22Backlog%22+ORDER+BY+%22Backlog+priority%22+DESC\
\
\
Developers\
==========\
\
The projects comes into two parts: the addon deployed on the Nuxeo\
server, written in Java and the client written in Python.\
\
Nuxeo Drive Client is a Python daemon that looks for changes\
on the local machine filesystem in a specific folder and on a\
remote workspace on the Nuxeo server using the Content Automation\
HTTP API and propagate those changes one way of the other.\
\
\
Server side Java components\
---------------------------\
\
To build the project and run the tests, use maven::\
\
  mvn -Ppackaging install\
\
The resulting marketplace package can be found in::\
\
  packaging/nuxeo-drive-marketplace/target/nuxeo-drive-marketplace-<version>.zip\
\
\
Nuxeo Drive Client under Linux & MacOSX\
---------------------------------------\
\
Install pip_ using your favorite package manager and then use it to grab all the\
dev dependencies and tools at once::\
\
  sudo pip install -r requirements.txt\
  export PYTHONPATH=`pwd`/nuxeo-drive-client\
  export PATH=$PATH:`pwd`/nuxeo-drive-client/bin\
\
You can safely ignore warnings about "Unknown distribution option: 'executables'".\
\
To run the tests, install and start a nuxeo server locally, then::\
\
  . ./tools/posix/integration_env.sh\
  nosetests nxdrive\
\
.. _pip: http://www.pip-installer.org/\
\
The install QT and PySide for graphical user interface (see below).\
\
\
Nuxeo Drive Client under Windows\
--------------------------------\
\
To setup a build environment under Windows you can run the powershell\
script with the administration rights (right click on the powershell\
icon in the programs menu to get the opportunity to "Run as\
administrator")::\
\
  powershell.exe C:\\path\\to\\nuxeo-drive-client\\tools\\windows\\nxdrive-setup-dev.ps1\
\
Some dependencies such as `psutil` can be tricky to build under windows.  You\
can use a binary installer from `this site\
<http://www.lfd.uci.edu/~gohlke/pythonlibs/>`_.\
\
If you get an error message complaining about the lack of signature\
for this script you can disable that security check with the following\
command::\
\
  Set-ExecutionPolicy Unrestricted\
\
The install QT and PySide for graphical user interface (see below).\
\
Then you should be able to build the standalone ``.msi`` installer with::\
\
  C:\\Python27\\python.exe setup.py --freeze bdist_msi\
\
The generated package should then be available in the ``dist/`` subfolder.\
\
\
Installing QT and PySide\
------------------------\
\
The graphical user interface elements of Nuxeo Drive client (such as the\
authentication prompt and the trayicon menu) are built using the PySide library\
that is a Python binding for the QT C++ library for building cross-platform\
interfaces. Both PySide and QT are licensed under the LGPL.\
\
When building/running Nuxeo Drive client from sources (i.e. not using the\
``.msi`` package) you should have those libraries installed on your system.\
\
Under Windows and OSX you can install the binaries (take the latest stable\
version). The Windows binary is named\
``qt-win-opensource-<version>-vs2010.exe`` while the OSX binary is named\
``qt-mac-opensource-<version>.dmg``:\
\
- `QT opensource binaries <http://get.qt.nokia.com/qt/source/>`_\
\
The install the matching version of the PySide binaries (for your version of\
Python, typically 2.7 for now as Python 3.3 is not yet supported).\
\
- `PySide Windows binaries <http://qt-project.org/wiki/PySide_Binaries_Windows>`_\
- `PySide OSX binaries <http://pyside.markus-ullmann.de/>`_\
\
Under Debian / Ubuntu you can install the ``python-pyside`` package directly::\
\
    sudo apt-get install python-pyside\
\
\
======================================================\
Cloud Portal Office Desktop - Desktop synchronization \
client for Sharp\
======================================================\
\
Installation\
============\
Requires two components, just like Nuxeo drive. Note the client is not yet compatible with the latest Nuxeo server component (from GitHub).\
\
Server-side marketplace package\
--------------------------------\
Use '\ul nuxeo\ulnone -drive-marketplace-5-1.7-SNAPSHOT.zip'.\
For server installation, follow the Nuxeo Drive instructions above.\
\
Windows Desktop Client\
----------------------\
Build and use the msi Windows installer. See build instructions below.\
The Windows application is installed by default in this location:\
C:\\Program Files (x86)\\CLOUD PORTAL OFFICE Desktop. \
The exe created is CpoDesktop.exe, and the corresponding shortcut is created in C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs.\
All the necessary dependencies (such as the \ul Python\ulnone  interpreter, the QT/PySide for the client side user interface and others) are included in the installation folder and should not impact any alternative version possibly already installed on your\
computer.\
Note that even on 64-bit Windows, the program is using 32-bit Python (2.7.3) as the Pyside is not available in 64-bit version.\
For the version currently used see the About box of the application.\
\
\pard\pardeftab720\ri0

\f1\fs20 \cf0 \ul \ulc0 Mac\ulnone  OSX Desktop Client\
----------------------\
\pard\pardeftab720\ri0

\f0\fs22 \cf0 An app distribution archive (.dmg) can be built using the instructions below.\
\
\pard\pardeftab720\ri0
\cf0 \ul \ulc0 Ubuntu\ulnone /\ul Debian\ulnone  (and other Linux variants) Client\
-----------------------------------------------\
Not supported.\
\
Building from sources\
=====================\
The sources are available in GitHub at: https://github.com/SharpCD/clouddesk-applications/tree/desktop/CloudDesktopSync - use 'master' branch (and also at\
\pard\pardeftab720\ri0
{\field{\*\fldinst{HYPERLINK "https://github.com/mconstantin/nuxeo-drive.git"}}{\fldrslt \cf2 \ul \ulc2 https://github.com/mconstantin/nuxeo-drive.git}}\cf2 , use\cf0  'sla_master' branch).\
\
If your repository is cloned in <repo>, navigate to <repo>\\ClouddesktopSync\\nuxeo-drive-client\\nuxeo-drive directory to inspect the package layout for the client application.\
To build, you must first set your environment, see below.\
\
Windows build\
--------------\
For a Windows build (msi), use:\
C:\\...\\nuxeo-drive>python setup.py install --freeze bdist_msi\
\
This will create the msi file in the ...\\nuxeo-drive\\dist directory:\
\
 Directory of C:\\...\\nuxeo-drive\\dist\
\
01/23/2013  06:13 PM        23,235,072 CLOUD PORTAL OFFICE Desktop-0.1.1-win32.msi\
01/23/2013  06:13 PM             6,075 update_msi.js\
\
Before installing on Windows, remove any previous installation. You must also be logged in as administrator on the local machine.\
In addition, the msi requires some changes which are not yet implementid in the setup.\
Run the following command to update the msi:\
C:\\gitrepo\\nuxeo-drive>cscript update_msi.js "CLOUD PORTAL OFFICE Desktop-0.1.1-win32.msi"\
\
adjusting for your locations. The javascript file is locating in the ...\\nuxeo-drive directory.\
\
Mac build\
----------\
from <repo>/nuxeo-drive, run:\
python setup.py py2app\
\
This will create an app file in the 'dist' subdirectory, which you must copy to /Applications directory.\
In order to build the .dmg file, navigate to ,,,/nuxeo-drive/tools/osx.\
First run the following script:\
\'85:osx<username>$ generate-dmg-ds-store-cpo.sh \
followed by:\
\'85:osx <username>$ create-dmg-cpo.sh \
\
This will create a .dmg file in the .../nuxeo-drive/dist folder:\
\'85:dist <username>$ ls -l\
total 55472\
drwxr-xr-x  3 mconstantin  staff       102 Feb 19 07:25 Cloud Portal Office Desktop.app\
-rw-r--r--@ 1 mconstantin  staff  28399552 Feb 19 07:29 Cloud Portal Office Desktop.dmg\
\
Setting up the build environment\
================================\
\
Windows\
-------\
\pard\pardeftab720\ri0

\f2 \cf0 \ul \ulc0 Install Python 2.7.3 (32-bit)\
\pard\pardeftab720\ri0
{\field{\*\fldinst{HYPERLINK "http://www.python.org/download/releases/2.7.3/"}}{\fldrslt \cf2 \ulc2 http://www.python.org/download/releases/2.7.3/}}\ulnone \
\
check in a cmd window:\
\pard\pardeftab720\ri0

\f0 \cf0 C:\\gitrepo\\nuxeo-drive>python --version\
Python 2.7.3\
\pard\pardeftab720\ri0

\f2 \cf0 \
\pard\pardeftab720\ri0
\cf0 \ul \ulc0 Install PyDev plugin for Eclipse\
\pard\pardeftab720\ri0
\cf0 \ulnone Use Eclipse Install New Software with this update site: {\field{\*\fldinst{HYPERLINK "http://pydev.org/updates"}}{\fldrslt \cf2 \ul \ulc2 http://pydev.org/updates}}\
\
\pard\pardeftab720\ri0
\cf0 \ul \ulc0 Install Qt 4.8\ulnone  (for UI)\ul \
\pard\pardeftab720\ri0
\cf0 \ulnone Download from here: {\field{\*\fldinst{HYPERLINK "http://qt-project.org/downloads"}}{\fldrslt \cf2 \ul \ulc2 http://qt-project.org/downloads}}\
And follow directions, e.g. set it on the PATH, etc.\
I see 4.8.4 available (do not use 5.0!). I have 4.8.3.\
\
Check version with:\
\pard\pardeftab720\ri0

\f0 \cf0 C:\\gitrepo\\nuxeo-drive>qmake -v\
QMake version 2.01a\
Using Qt version 4.8.3 in C:\\Qt\\4.8.3\\lib\
\
\pard\pardeftab720\ri0

\f2 \cf0 \ul \ulc0 Install PySide\ulnone  (Python modules for Qt)
\f0 \
\pard\pardeftab720\ri0

\f2 \cf0 From here: {\field{\*\fldinst{HYPERLINK "http://qt-project.org/wiki/Category:LanguageBindings::PySide::Downloads"}}{\fldrslt \cf2 \ul \ulc2 http://qt-project.org/wiki/Category:LanguageBindings::PySide::Downloads}}\
\
Alternatively you may install 
\f0 easy_install
\f2  first, following instructions from here: {\field{\*\fldinst{HYPERLINK "http://pypi.python.org/pypi/setuptools"}}{\fldrslt \cf2 \ul \ulc2 http://pypi.python.org/pypi/setuptools}}\
(for 32-bit Python)\
\
There is more info here:\
\pard\pardeftab720\ri0
{\field{\*\fldinst{HYPERLINK "http://packages.python.org/distribute/easy_install.html"}}{\fldrslt \cf2 \ul \ulc2 http://packages.python.org/distribute/easy_install.html}}\
\
this way you can install a lot of Python package e.g.:\
\pard\pardeftab720\ri0

\f0 \cf0 C:\\gitrepo\\nuxeo-drive>\cf3 easy_install pySide\cf0 \
Searching for pySide\
Best match: PySide 1.1.2\
Adding PySide 1.1.2 to easy-install.pth file\
Installing pyside-uic-script.py script to C:\\Python27-32bit\\Scripts\
Installing pyside-uic.exe script to C:\\Python27-32bit\\Scripts\
Installing pyside-uic.exe.manifest script to C:\\Python27-32bit\\Scripts\
\
Using c:\\python27-32bit\\lib\\site-packages\
Processing dependencies for pySide\
Finished processing dependencies for pySide\
\pard\pardeftab720\ri0

\f2 \cf0 \
To check, import it in Python:\
\pard\pardeftab720\ri0

\f0 \cf0 C:\\gitrepo\\nuxeo-drive>python\
Python 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win\
32\
Type "help", "copyright", "credits" or "license" for more information.\
>>> import PySide\
>>> print PySide.__version__\
1.1.2\
>>>\
\pard\pardeftab720\ri0

\f2 \cf0 \
\pard\pardeftab720\ri0
\cf0 \ul \ulc0 Install the rest of Python packages, easiest with 
\f0 easy_install
\f2 \
\pard\pardeftab720\ri0
\cf0 \ulnone nose\
cx_Freeze\
icemac.truncatetext\
psutil\
setuptools\
py2exe (for Windows) or py2app (for Mac)\
suds\
pywin32 (for Windows only)\
sqlalchemy\
dateutil\
\
\pard\pardeftab720\ri0
\cf0 \ul \ulc0 Note\ulnone : some Python packages cannot be installed with 
\i easy_install
\i0  (or 
\i pip
\i0 ). In those case, search for and download an .msi (or .dmg) installation file.\
 
\f0 \
Mac\
\pard\pardeftab720\ri0\sl276\slmult1\sa200
\cf0 ---
\f3 \
\pard\pardeftab720\ri0

\f0 \cf0 Install same modules as for Windows, minus py2exe and pywin32.\
Use pip (\cf2 \ul \ulc2 http://pypi.python.org/pypi/pip\cf0 \ulnone ) tool instead of easy_install.\
In addition, install the \'91keyring\'92 module:\
\
$  pip install keyring\
\
Note: I used OS X 10.8.2 (Mountain Lion) but probably will work with Lion as well.\
\
\
Additional resources\
--------------------\
\
- `Continuous Integration Linux`_\
- `Continuous Integration Windows`_\
- `Coverage Report`_\
\
.. _`Continuous Integration Linux`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-linux/\
.. _`Continuous Integration Windows`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/\
.. _`Coverage report`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-linux/lastSuccessfulBuild/artifact/nuxeo-drive/nuxeo-drive-client/coverage/index.html\
\
\
}