{\rtf1\ansi\deff0{\fonttbl{\f0\fnil\fcharset0 Courier New;}{\f1\fnil Consolas;}{\f2\fswiss\fprq2\fcharset0 Calibri;}{\f3\fmodern\fprq1\fcharset0 Courier New;}}
{\colortbl ;\red0\green0\blue0;\red0\green0\blue255;\red255\green0\blue0;}
{\*\generator Msftedit 5.41.21.2509;}\viewkind4\uc1\pard\lang1033\f0\fs22 ======================================================\par
Nuxeo Drive - Desktop synchronization client for Nuxeo\par
======================================================\par
\par
This is an ongoing development project for desktop synchronization\par
of local folders with remote Nuxeo workspaces.\par
\par
Watch this `early screencast`_ to get 2 min overview of this project.\par
\par
WARNING: The status is EARLY ALPHA. Don't run on a production server\par
as you might loose data!\par
\par
.. _`early screencast`: http://lounge.blogs.nuxeo.com/2012/07/nuxeo-drive-desktop-synchronization-client-nuxeo.html\par
\par
\par
Install\par
=======\par
\par
Installing Nuxeo Drive needs two components: a server addon for Nuxeo and a\par
desktop program on the user's computer.\par
\par
\par
Server-side marketplace package\par
-------------------------------\par
\par
Fetch the latest development version of the marketplace package\par
`nuxeo-drive-marketplace-5.7-SNAPSHOT.zip <http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/lastSuccessfulBuild/artifact/packaging/nuxeo-drive-marketplace/target/nuxeo-drive-marketplace-5.7-SNAPSHOT.zip>`_\par
from the Continuous Integration server.\par
\par
The marketplace package can be installed using the Admin Center /\par
Update Center / Local Packages interface of a Nuxeo server.\par
\par
Alternatively, from the command line::\par
\par
  $NUXEO_HOME/bin/nuxeoctl stop\par
  $NUXEO_HOME/bin/nuxeoctl mp-install --nodeps nuxeo-drive-marketplace-<version>.zip\par
  $NUXEO_HOME/bin/nuxeoctl start\par
\par
\par
Windows Desktop Client\par
----------------------\par
\par
Fetch the latest development version for\par
`nuxeo-drive-latest-dev.msi <http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/lastSuccessfulBuild/artifact/dist/nuxeo-drive-lastest-dev.msi>`_\par
windows installer from the Continous Integration.\par
\par
Once you installed the package (Administrator rights required) the new folder\par
holding the ``ndrive.exe`` and ``ndrivew.exe`` programs will be added to your\par
``Path`` environment variable automatically.\par
\par
All the necessary dependencies (such as the Python interpreter and the QT /\par
PySide for the client side user interface) are included in this folder and\par
should not impact any alternative version possibly already installed on your\par
computer.\par
\par
\par
Mac OSX Desktop Client\par
----------------------\par
\par
The ``.dmg`` package of the client is not yet available. In the mean time you\par
can install it from source::\par
\par
  sudo easy_install pip\par
  sudo pip install -U -r https://raw.github.com/nuxeo/nuxeo-drive/master/requirements.txt\par
  sudo pip install -U git+https://github.com/nuxeo/nuxeo-drive.git\par
\par
The install QT and PySide for graphical user interface (see below).\par
\par
Ubuntu/Debian (and other Linux variants) Client\par
-----------------------------------------------\par
\par
The ``.deb`` package of the client is not yet available. In the mean time you\par
can install it from source::\par
\par
  sudo apt-get install python-pip\par
  sudo pip install -U -r https://raw.github.com/nuxeo/nuxeo-drive/master/requirements.txt\par
  sudo pip install -U git+https://github.com/nuxeo/nuxeo-drive.git\par
\par
The install QT and PySide for graphical user interface (see below).\par
\par
\par
Configuration and usage\par
=======================\par
\par
Once Nuxeo Drive is installed on the client desktop (either from a\par
ready to use ``.msi`` Windows binary installer or by installing\par
from source with pip_), the synchronization client can be operated\par
from the commandline.\par
\par
1. Ensure that ``ndrive`` program is installed in a folder that has been\par
   added to the PATH enviroment variable of your OS.\par
\par
   You can check by typing the ``ndrive --help`` command in a console.\par
\par
2. Launch the synchronization program (no automatic background mode\par
   yet, this will come in future versions)::\par
\par
     ndrive\par
\par
   Under Windows you can launch ``ndrivew.exe`` instead to avoid\par
   keeping the cmd console open while Nuxeo Drive is running instead.\par
\par
   The first time you run this command a dialog window will open asking for the\par
   URL of the Nuxeo server and your user credentials.\par
\par
   Alternatively you can bind to a Nuxeo server with your user credentials\par
   using the following commandline arguments::\par
\par
     ndrive bind-server nuxeo-username http://server:port/nuxeo --password secret\par
\par
   This will create a new folder called ``Nuxeo Drive`` in your home\par
   folder under Linux and MacOSX and under the ``Documents`` folder\par
   under Windows.\par
\par
3. Go to your Nuxeo with your browser, navigate to workspaces or\par
   folder where you have permission to create new documents. Click\par
   on the double arrows button right of the title of the folder to\par
   treat this folder as a new synchronization root.\par
\par
   Alternatively you can do this operation from the commandline with::\par
\par
     ndrive bind-root "/default-domain/workspaces/My Workspace"\par
\par
4. You can now create office documents and folders locally or inside\par
   Nuxeo and watch them getting synchronized both ways automatically.\par
\par
For more options, type::\par
\par
    ndrive --help\par
    ndrive subcommand --help\par
\par
\par
Reporting bugs\par
==============\par
\par
You can log DEBUG information directly in the console by using the\par
following commandline::\par
\par
    ndrive --log-level-console=DEBUG\par
\par
Then you can create a new jira_ issue mentionning the version of the Nuxeo\par
platform, your operating system name and version (e.g. Windows 7), the steps to\par
reproduce the error and a copy of the logs.\par
\par
For long running sessions, it is better to dump the debug information in a log\par
file. This can be done with the following command::\par
\par
    ndrive --log-level-file=DEBUG\par
\par
or even::\par
\par
    ndrive --log-level-file=TRACE\par
\par
By default the location of the log file is: ``~/.nuxeo-drive/logs/``\par
where ``~`` stands for the location of the user folder. For instance:\par
\par
- under Windows 7 and 8: ``C:\\Users\\username\\.nuxeo-drive\\logs``\par
- under Mac OSX: ``/Users/username/.nuxeo-drive/logs``\par
- under Ubuntu (and other Linux variants): ``/home/username/.nuxeo-drive/logs``\par
\par
.. _jira: https://jira.nuxeo.com\par
\par
\par
Roadmap\par
=======\par
\par
The backlog_ is handled by Jira.\par
\par
.. _backlog: https://jira.nuxeo.com/secure/IssueNavigator.jspa?reset=true&jqlQuery=component+%3D+%22Nuxeo+Drive%22+AND+Tags+%3D+%22Backlog%22+ORDER+BY+%22Backlog+priority%22+DESC\par
\par
\par
Developers\par
==========\par
\par
The projects comes into two parts: the addon deployed on the Nuxeo\par
server, written in Java and the client written in Python.\par
\par
Nuxeo Drive Client is a Python daemon that looks for changes\par
on the local machine filesystem in a specific folder and on a\par
remote workspace on the Nuxeo server using the Content Automation\par
HTTP API and propagate those changes one way of the other.\par
\par
\par
Server side Java components\par
---------------------------\par
\par
To build the project and run the tests, use maven::\par
\par
  mvn -Ppackaging install\par
\par
The resulting marketplace package can be found in::\par
\par
  packaging/nuxeo-drive-marketplace/target/nuxeo-drive-marketplace-<version>.zip\par
\par
\par
Nuxeo Drive Client under Linux & MacOSX\par
---------------------------------------\par
\par
Install pip_ using your favorite package manager and then use it to grab all the\par
dev dependencies and tools at once::\par
\par
  sudo pip install -r requirements.txt\par
  export PYTHONPATH=`pwd`/nuxeo-drive-client\par
  export PATH=$PATH:`pwd`/nuxeo-drive-client/bin\par
\par
You can safely ignore warnings about "Unknown distribution option: 'executables'".\par
\par
To run the tests, install and start a nuxeo server locally, then::\par
\par
  . ./tools/posix/integration_env.sh\par
  nosetests nxdrive\par
\par
.. _pip: http://www.pip-installer.org/\par
\par
The install QT and PySide for graphical user interface (see below).\par
\par
\par
Nuxeo Drive Client under Windows\par
--------------------------------\par
\par
To setup a build environment under Windows you can run the powershell\par
script with the administration rights (right click on the powershell\par
icon in the programs menu to get the opportunity to "Run as\par
administrator")::\par
\par
  powershell.exe C:\\path\\to\\nuxeo-drive-client\\tools\\windows\\nxdrive-setup-dev.ps1\par
\par
Some dependencies such as `psutil` can be tricky to build under windows.  You\par
can use a binary installer from `this site\par
<http://www.lfd.uci.edu/~gohlke/pythonlibs/>`_.\par
\par
If you get an error message complaining about the lack of signature\par
for this script you can disable that security check with the following\par
command::\par
\par
  Set-ExecutionPolicy Unrestricted\par
\par
The install QT and PySide for graphical user interface (see below).\par
\par
Then you should be able to build the standalone ``.msi`` installer with::\par
\par
  C:\\Python27\\python.exe setup.py --freeze bdist_msi\par
\par
The generated package should then be available in the ``dist/`` subfolder.\par
\par
\par
Installing QT and PySide\par
------------------------\par
\par
The graphical user interface elements of Nuxeo Drive client (such as the\par
authentication prompt and the trayicon menu) are built using the PySide library\par
that is a Python binding for the QT C++ library for building cross-platform\par
interfaces. Both PySide and QT are licensed under the LGPL.\par
\par
When building/running Nuxeo Drive client from sources (i.e. not using the\par
``.msi`` package) you should have those libraries installed on your system.\par
\par
Under Windows and OSX you can install the binaries (take the latest stable\par
version). The Windows binary is named\par
``qt-win-opensource-<version>-vs2010.exe`` while the OSX binary is named\par
``qt-mac-opensource-<version>.dmg``:\par
\par
- `QT opensource binaries <http://get.qt.nokia.com/qt/source/>`_\par
\par
The install the matching version of the PySide binaries (for your version of\par
Python, typically 2.7 for now as Python 3.3 is not yet supported).\par
\par
- `PySide Windows binaries <http://qt-project.org/wiki/PySide_Binaries_Windows>`_\par
- `PySide OSX binaries <http://pyside.markus-ullmann.de/>`_\par
\par
Under Debian / Ubuntu you can install the ``python-pyside`` package directly::\par
\par
    sudo apt-get install python-pyside\par
\par
\par
\pard ======================================================\par
Cloud Portal Office Desktop - Desktop synchronization \par
client for Sharp\par
\pard ======================================================\par
\par
Installation\par
============\par
Requires two components, just like Nuxeo drive. Note the client is not yet compatible with the latest Nuxeo server component (from GitHub).\par
\par
Server-side marketplace package\par
--------------------------------\par
Use '\cf1\ul nuxeo\cf0\ulnone -drive-marketplace-5-1.7-SNAPSHOT.zip'.\par
For server installation, follow the Nuxeo Drive instructions above.\par
\par
Windows Desktop Client\par
----------------------\par
Build and use the msi Windows installer. See build instructions below.\par
The Windows application is installed by default in this location:\par
C:\\Program Files (x86)\\CLOUD PORTAL OFFICE Desktop. \par
Two exe's are created: CpoDesktop.exe and CpoWizard.exe, and two corresponding shortcuts are created in C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs.\par
The wizard shortcut is temporary as the wizard is meant to be executed first time only at the end of the installation.\par
All the necessary dependencies (such as the \cf1\ul Python\cf0\ulnone  interpreter, the QT/PySide for the client side user interface and others) are included in the instalaltion folder and should not impact any alternative version possibly already installed on your\par
computer.\par
Note that even on 64-bit Windows, the program is using 32-bit Python (2.7.3) as the Pyside is not available in 64-bit version.\par
For the version currently used see the About box of the application.\par
\par
\cf1\ul\f1\fs20 Mac\cf0\ulnone  OSX Desktop Client\par
----------------------\par
\f0\fs22 The ``.\cf1\ul dmg\cf0\ulnone `` package of the client is not yet available. An app can be built instead (see build instructions below).\par
\par
\cf1\ul Ubuntu\cf0\ulnone /\cf1\ul Debian\cf0\ulnone  (and other Linux variants) Client\par
-----------------------------------------------\par
Not tested.\par
\par
Building from sources\par
=====================\par
The sources are available in GitHub at: {\field{\*\fldinst{HYPERLINK "https://github.com/mconstantin/nuxeo-drive.git"}}{\fldrslt{\ul\cf2 https://github.com/mconstantin/nuxeo-drive.git}}}\f0\fs22\par
\par
The integration branch is 'sla_master'.\par
\par
If your repository is cloned in <repo>, navigate to <repo>\\nuxeo-drive directory.\par
To build, you must first set your environment, see below.\par
\par
Windows build\par
--------------\par
For a Windows build (msi), use:\par
C:\\gitrepo\\nuxeo-drive>python setup.py install --freeze bdist_msi\par
\par
This will create the msi file in the <repo>\\nuxeo-drive\\dist directory:\par
\par
 Directory of C:\\gitrepo\\nuxeo-drive\\dist\par
\par
01/23/2013  06:13 PM        23,235,072 CLOUD PORTAL OFFICE Desktop-0.1.1-win32.msi\par
01/23/2013  06:13 PM             6,075 update_msi.js\par
\par
Before installing on Windows, remove any previous installation. You must also be logged in as administrator on the local machine.\par
In addition, the msi requires some changes which are not yet implementid in the setup.\par
Run the following command to update the msi:\par
C:\\gitrepo\\nuxeo-drive>cscript update_msi.js "CLOUD PORTAL OFFICE Desktop-0.1.1-win32.msi"\par
\par
adjusting for your locations. The javascript file is locating in <repo>\\nuxeo-drive directory.\par
\par
Mac build\par
----------\par
from <repo>/nuxeo-drive, run:\par
python setup.py py2app\par
\par
This will create an app file in the 'dist' subdirectory, which you must copy to /Applications directory.\par
\par
Setting up the build environment\par
================================\par
\pard\ul\f2 Install Python 2.7.3 (32-bit)\par
\ulnone{\field{\*\fldinst{HYPERLINK "http://www.python.org/download/releases/2.7.3/"}}{\fldrslt{\ul\cf2 http://www.python.org/download/releases/2.7.3/}}}\f2\fs22\par
\par
check in a cmd window:\par
\f3 C:\\gitrepo\\nuxeo-drive>python --version\par
Python 2.7.3\par
\f2\par
\ul Install PyDev plugin for Eclipse\par
\ulnone Use Eclipse Install New Software with this update site: {\field{\*\fldinst{HYPERLINK "http://pydev.org/updates"}}{\fldrslt{\ul\cf2 http://pydev.org/updates}}}\f2\fs22\par
\par
\ul Install Qt 4.8\ulnone  (for UI)\ul\par
\ulnone Download from here: {\field{\*\fldinst{HYPERLINK "http://qt-project.org/downloads"}}{\fldrslt{\ul\cf2 http://qt-project.org/downloads}}}\f2\fs22\par
And follow directions, e.g. set it on the PATH, etc.\par
I see 4.8.4 available (do not use 5.0!). I have 4.8.3.\par
\par
Check version with:\par
\f3 C:\\gitrepo\\nuxeo-drive>qmake -v\par
QMake version 2.01a\par
Using Qt version 4.8.3 in C:\\Qt\\4.8.3\\lib\par
\par
\ul\f2 Install PySide\ulnone  (Python modules for Qt)\f3\par
\f2 From here: {\field{\*\fldinst{HYPERLINK "http://qt-project.org/wiki/Category:LanguageBindings::PySide::Downloads"}}{\fldrslt{\ul\cf2 http://qt-project.org/wiki/Category:LanguageBindings::PySide::Downloads}}}\f2\fs22\par
\par
Alternatively you may install \f3 easy_install\f2  first, following instructions from here: {\field{\*\fldinst{HYPERLINK "http://pypi.python.org/pypi/setuptools"}}{\fldrslt{\ul\cf2 http://pypi.python.org/pypi/setuptools}}}\f2\fs22\par
(for 32-bit Python)\par
\par
There is more info here:\par
{\field{\*\fldinst{HYPERLINK "http://packages.python.org/distribute/easy_install.html"}}{\fldrslt{\ul\cf2 http://packages.python.org/distribute/easy_install.html}}}\f2\fs22\par
\par
this way you can install a lot of Python package e.g.:\par
\f3 C:\\gitrepo\\nuxeo-drive>\cf3 easy_install pySide\cf0\par
Searching for pySide\par
Best match: PySide 1.1.2\par
Adding PySide 1.1.2 to easy-install.pth file\par
Installing pyside-uic-script.py script to C:\\Python27-32bit\\Scripts\par
Installing pyside-uic.exe script to C:\\Python27-32bit\\Scripts\par
Installing pyside-uic.exe.manifest script to C:\\Python27-32bit\\Scripts\par
\par
Using c:\\python27-32bit\\lib\\site-packages\par
Processing dependencies for pySide\par
Finished processing dependencies for pySide\par
\f2\par
To check, import it in Python:\par
\f3 C:\\gitrepo\\nuxeo-drive>python\par
Python 2.7.3 (default, Apr 10 2012, 23:31:26) [MSC v.1500 32 bit (Intel)] on win\par
32\par
Type "help", "copyright", "credits" or "license" for more information.\par
>>> import PySide\par
>>> print PySide.__version__\par
1.1.2\par
>>>\par
\f2\par
\ul Install the rest of Python packages, easiest with \f3 easy_install\f2\par
\ulnone nose\par
cx_Freeze\par
icemac.truncatetext\par
psutil\par
setuptools\par
py2exe (for Windows) or py2qapp (for Mac)\par
suds\par
pywin32 (for Windows only)\par
sqlalchemy\par
\pard\f0\par
\par
Additional resources\par
--------------------\par
\par
- `Continuous Integration Linux`_\par
- `Continuous Integration Windows`_\par
- `Coverage Report`_\par
\par
.. _`Continuous Integration Linux`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-linux/\par
.. _`Continuous Integration Windows`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-windows/\par
.. _`Coverage report`: http://qa.nuxeo.org/jenkins/job/IT-nuxeo-drive-master-linux/lastSuccessfulBuild/artifact/nuxeo-drive/nuxeo-drive-client/coverage/index.html\par
\par
\par
}
 